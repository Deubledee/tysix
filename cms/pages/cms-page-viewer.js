define(["require","../cms-login.js"],function(_require,_cmsLogin){"use strict";_require=babelHelpers.interopRequireWildcard(_require);class cmsPageViewer extends _cmsLogin.cmsViewerTemplate{static get is(){return"cms-page-viewer"}static get observers(){return["_routePageChanged(route, routeData, query)"]}ready(){super.ready();this._routePageChanged(this.routeData)}_routePageChanged(route,page){if("/content/pages"===route.prefix){if(page!==void 0&&"page"in page){if(""===route.path){this.routeData.page="";page.page=""}if(!page.page){this.page="home"}else if(-1!==["add-category-pages","edit-category-pages"].indexOf(page.page)){this.page="add-category-pages"}else if(-1!==["edit-subcategory-pages","add-subcategory-pages"].indexOf(page.page)){this.page="add-subcategory-pages"}else{this.page="view404"}}else if(!0===page instanceof Object){this.page="home"}}}_pageChanged(page){if(page!==void 0){if("home"===page){new Promise((res,rej)=>_require.default(["./cms-page-list-type.js"],res,rej)).then(bundle=>bundle&&bundle.$cmsPageListType||{}).then(item=>{});return}if("add-category-pages"===page){new Promise((res,rej)=>_require.default(["./cms-page-list-type-content.js"],res,rej)).then(bundle=>bundle&&bundle.$cmsPageListTypeContent||{}).then(item=>{});return}if("add-subcategory-pages"===page){new Promise((res,rej)=>_require.default(["../sub-categories/cms-content-subcats.js"],res,rej)).then(bundle=>bundle&&bundle.$cmsContentSubcats||{}).then(item=>{});return}if("view404"===page){new Promise((res,rej)=>_require.default(["../cms-404-warning.js"],res,rej)).then(bundle=>bundle&&bundle.$cms$404Warning||{});return}}}}customElements.define(cmsPageViewer.is,cmsPageViewer)});