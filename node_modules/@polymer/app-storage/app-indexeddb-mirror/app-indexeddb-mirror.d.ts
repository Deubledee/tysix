/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   app-indexeddb-mirror/app-indexeddb-mirror.js
 */

import {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';

import {AppNetworkStatusBehavior} from '../app-network-status-behavior.js';

import {AppStorageBehavior} from '../app-storage-behavior.js';

import {AppIndexedDBMirrorClient} from './app-indexeddb-mirror-client.js';

import {LegacyElementMixin} from '@polymer/polymer/lib/legacy/legacy-element-mixin.js';

interface AppIndexeddbMirrorElement extends AppStorageBehavior, AppNetworkStatusBehavior, LegacyElementMixin, HTMLElement {
  readonly isNew: any;

  /**
   * The key against which to persist data in the IndexedDB database.
   * This key uniquely maps to a key in an IndexedDB object store, so
   * any instances of `app-indexeddb-mirror` with the same `key` will
   * operate on the same persisted representation of the input `data`.
   */
  key: string|null|undefined;

  /**
   * Any string value that uniquely identifies the current session.
   * Whenever this value changes, the data stored at `key` will be
   * deleted. This is useful for handling scenarios such as user
   * session changes (e.g., logout).
   */
  session: string|null|undefined;

  /**
   * A URL that points to the script to load for the corresponding
   * Worker instance that will be used for minimally-blocking operations
   * on IndexedDB.
   *
   * By default, this will be the path to
   * `app-indexeddb-mirror-worker.js` as resolved by
   * `Polymer.Base.resolveUrl` for the current element being created.
   */
  workerUrl: string|null|undefined;

  /**
   * An instance of `Polymer.AppIndexedDBMirrorClient`, which is
   * responsible for negotiating transactions with the corresponding
   * Worker spawned from `workerUrl`.
   */
  readonly client: object|null|undefined;

  /**
   * When online, this property is a pass-through value mapped directly
   * to the `data` property of this element.
   *
   * When offline, this property is a read-only copy of the `data` that
   * has been stored in the IndexedDB database at `key`.
   */
  persistedData: object|null|undefined;
  importMeta: any;
  destroy(): any;
  initializeStoredValue(): any;
  getStoredValue(path: any): any;
  setStoredValue(path: any, value: any): any;
}

export {AppIndexeddbMirrorElement};

declare global {

  interface HTMLElementTagNameMap {
    "app-indexeddb-mirror": AppIndexeddbMirrorElement;
  }
}
