/**
 * DO NOT EDIT
 *
 * This file was automatically generated by
 *   https://github.com/Polymer/tools/tree/master/packages/gen-typescript-declarations
 *
 * To modify these typings, edit the source file(s):
 *   app-indexeddb-mirror/app-indexeddb-mirror-client.js
 */

import {CommonWorker} from './common-worker.js';

export {AppIndexedDBMirrorClient};

/**
 * Class that implements a client for initializing and negotiating
 * transactions with a worker containing an instance of
 * `AppIndexedDBMirrorWorker`.
 */
declare class AppIndexedDBMirrorClient {
  readonly supportsMirroring: any;

  /**
   * @param _workerUrl The URL to use when initializing the
   * corresponding WebWorker.
   * @param baseUri The base uri of app-storage/app-indexeddb-mirror
   */
  constructor(_workerUrl: string, baseUri?: string);

  /**
   * Requests that the worker validate the current session against the
   * provided `session` parameter. If the current session and the provided
   * `session` do not match, the worker is expected to clear any stored
   * data.
   *
   * @param session The session to validate the current session
   * against.
   * @returns A promise that resolves when the worker confirms that
   * the session has been validated.
   */
  validateSession(session: string): Promise<any>|null|undefined;

  /**
   * Sends a message to the worker and awaits and handles a corresponding
   * response.
   *
   * @param message Any value that can be sent via `postMessage` to the
   * worker.
   * @returns A promise that resolves when a corresponding response
   * message has been received by from the worker. Requests are given a
   * unique ID, so the first worker response that echos this ID will be
   * used to resolve the promise.
   */
  post(message: any): Promise<any>|null;

  /**
   * Requests that the worker perform a transaction (supported verbs are
   * `get` and `set`) against a provided `key` and optional `value` in the
   * IndexedDB object store.
   *
   * @param method The method of the transaction (`"get"` or
   * `"set"`)
   * @param key The key in the IndexedDB object store to operate
   * on.
   * @param value The value to set at `key`, if using the `"set"`
   * `method`.
   * @returns A promise that resolves when the worker indicates
   * that the transaction has completed.
   */
  transaction(method: string, key: string, value: object|null): Promise<any>|null;
  closeDb(): any;

  /**
   * Instantiates (if necessary) and connects to the backing worker
   * instance.
   *
   * @param baseUri The base uri of app-storage/app-indexeddb-mirror
   * @returns A promise that resolves when the worker has been
   * created and a handshake has been returned. The worker is an instance
   * of `SharedWorker` (if available), or else `Polymer.CommonWorker`.
   */
  connect(baseUri?: string): Promise<any>|null;
}
