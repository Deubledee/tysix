{
  "_args": [
    [
      "rollup@https://registry.npmjs.org/rollup/-/rollup-0.64.1.tgz",
      "/home/diogo/www/node_modules/polymer-cli"
    ]
  ],
  "_from": "rollup@https://registry.npmjs.org/rollup/-/rollup-0.64.1.tgz",
  "_id": "rollup@0.64.1",
  "_inCache": true,
  "_location": "/polymer-cli/rollup",
  "_phantomChildren": {},
  "_requested": {
    "name": "rollup",
    "raw": "rollup@https://registry.npmjs.org/rollup/-/rollup-0.64.1.tgz",
    "rawSpec": "https://registry.npmjs.org/rollup/-/rollup-0.64.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/rollup/-/rollup-0.64.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/polymer-bundler"
  ],
  "_resolved": "https://registry.npmjs.org/rollup/-/rollup-0.64.1.tgz",
  "_shasum": "9188ee368e5fcd43ffbc00ec414e72eeb5de87ba",
  "_shrinkwrap": null,
  "_spec": "rollup@https://registry.npmjs.org/rollup/-/rollup-0.64.1.tgz",
  "_where": "/home/diogo/www/node_modules/polymer-cli",
  "author": {
    "name": "Rich Harris"
  },
  "bin": {
    "rollup": "./bin/rollup"
  },
  "bugs": {
    "url": "https://github.com/rollup/rollup/issues"
  },
  "contributors": [
    {
      "name": "Oskar Segersv√§rd",
      "email": "victorystick@gmail.com"
    },
    {
      "name": "Bogdan Chadkin",
      "email": "trysound@yandex.ru"
    }
  ],
  "dependencies": {
    "@types/estree": "0.0.39",
    "@types/node": "*"
  },
  "description": "Next-generation ES module bundler",
  "devDependencies": {
    "@types/acorn": "^4.0.3",
    "@types/chokidar": "^1.7.5",
    "@types/minimist": "^1.2.0",
    "@types/pretty-ms": "^3.0.0",
    "acorn": "^5.7.1",
    "acorn-dynamic-import": "^3.0.0",
    "acorn-import-meta": "^0.2.1",
    "ansi-escapes": "^3.1.0",
    "buble": "^0.19.3",
    "chokidar": "^2.0.4",
    "console-group": "^0.3.1",
    "date-time": "^2.1.0",
    "eslint": "^5.3.0",
    "eslint-plugin-import": "^2.13.0",
    "execa": "^0.10.0",
    "fixturify": "^0.3.4",
    "hash.js": "^1.1.5",
    "husky": "^0.14.3",
    "immutable": "^3.8.2",
    "is-reference": "^1.1.0",
    "istanbul": "^0.4.3",
    "lint-staged": "^7.2.0",
    "locate-character": "^2.0.5",
    "magic-string": "^0.25.0",
    "minimist": "^1.2.0",
    "mocha": "^5.2.0",
    "prettier": "^1.14.0",
    "pretty-bytes": "^5.1.0",
    "pretty-ms": "^3.2.0",
    "remap-istanbul": "^0.11.1",
    "require-relative": "^0.8.7",
    "rollup": "^0.63.5",
    "rollup-plugin-buble": "^0.19.2",
    "rollup-plugin-commonjs": "^9.1.4",
    "rollup-plugin-json": "^3.0.0",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-string": "^2.0.2",
    "rollup-plugin-typescript": "^0.8.1",
    "rollup-pluginutils": "^2.3.0",
    "sander": "^0.6.0",
    "shx": "^0.3.2",
    "signal-exit": "^3.0.2",
    "source-map": "^0.6.1",
    "source-map-support": "^0.5.6",
    "sourcemap-codec": "^1.4.1",
    "tslint": "^5.11.0",
    "turbocolor": "^2.4.1",
    "typescript": "^3.0.1",
    "uglify-js": "^3.4.6",
    "url-parse": "^1.4.3"
  },
  "files": [
    "README.md",
    "bin/rollup",
    "dist/**/*.d.ts",
    "dist/rollup.browser.js",
    "dist/rollup.es.js",
    "dist/rollup.js"
  ],
  "homepage": "https://github.com/rollup/rollup",
  "jsnext:main": "dist/rollup.es.js",
  "keywords": [
    "bundler",
    "bundling",
    "es6",
    "modules",
    "optimizer"
  ],
  "license": "MIT",
  "lint-staged": {
    "test/**/*.ts": [
      "git add",
      "prettier --write",
      "tslint --project test/typescript --fix"
    ],
    "{src,bin,browser,typings}/**/*.ts": [
      "git add",
      "prettier --write",
      "tslint --project . --fix"
    ]
  },
  "main": "dist/rollup.js",
  "module": "dist/rollup.es.js",
  "name": "rollup",
  "optionalDependencies": {},
  "readme": "# Rollup\n\n<p align=\"center\">\n  <a href=\"https://travis-ci.org/rollup/rollup\">\n    <img src=\"https://api.travis-ci.org/rollup/rollup.svg?branch=master\"\n         alt=\"build status\">\n  </a>\n  <a href=\"https://www.npmjs.com/package/rollup\">\n    <img src=\"https://img.shields.io/npm/v/rollup.svg\"\n         alt=\"npm version\">\n  </a>\n  <a href=\"https://packagephobia.now.sh/result?p=rollup\">\n    <img src=\"https://packagephobia.now.sh/badge?p=rollup\"\n         alt=\"install size\">\n  </a>\n    <a href=\"#backers\" alt=\"sponsors on Open Collective\">\n      <img src=\"https://opencollective.com/rollup/backers/badge.svg\" />\n  </a> \n  <a href=\"#sponsors\" alt=\"Sponsors on Open Collective\">\n    <img src=\"https://opencollective.com/rollup/sponsors/badge.svg\" />\n  </a> \n  <a href=\"https://github.com/rollup/rollup/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/npm/l/rollup.svg\"\n         alt=\"license\">\n  </a>\n  <a href=\"https://david-dm.org/rollup/rollup\">\n    <img src=\"https://david-dm.org/rollup/rollup/status.svg\"\n         alt=\"dependency status\">\n  </a>\n  <a href='https://gitter.im/rollup/rollup?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge'>\n    <img src='https://badges.gitter.im/rollup/rollup.svg'\n         alt='Join the chat at https://gitter.im/rollup/rollup'>\n  </a>\n</p>\n\n\n## Overview\n\nRollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today.\n\n## Quick Start Guide\n\nInstall with `npm install --global rollup`. Rollup can be used either through a [command line interface](https://rollupjs.org/#command-line-reference) with an optional configuration file, or else through its [JavaScript API](https://rollupjs.org/#javascript-api). Run `rollup --help` to see the available options and parameters. The starter project templates, [rollup-starter-lib](https://github.com/rollup/rollup-starter-lib) and [rollup-starter-app](https://github.com/rollup/rollup-starter-app), demonstrate common configuration options, and more detailed instructions are available throughout the [user guide](http://rollupjs.org/).\n\n### Commands\n\nThese commands assume the entry point to your application is named main.js, and that you'd like all imports compiled into a single file named bundle.js.\n\nFor browsers:\n\n```bash\n# compile to a <script> containing a self-executing function\n$ rollup main.js --format iife --name \"myBundle\" --file bundle.js\n```\n\nFor Node.js:\n\n```bash\n# compile to a CommonJS module\n$ rollup main.js --format cjs --file bundle.js\n```\n\nFor both browsers and Node.js:\n\n```bash\n# UMD format requires a bundle name\n$ rollup main.js --format umd --name \"myBundle\" --file bundle.js\n```\n\n## Why\n\nDeveloping software is usually easier if you break your project into smaller separate pieces, since that often removes unexpected interactions and dramatically reduces the complexity of the problems you'll need to solve, and simply writing smaller projects in the first place [isn't necessarily the answer](https://medium.com/@Rich_Harris/small-modules-it-s-not-quite-that-simple-3ca532d65de4). Unfortunately, JavaScript has not historically included this capability as a core feature in the language.\n\nThis finally changed with ES modules support in JavaScript, which provides a syntax for importing and exporting functions and data so they can be shared between separate scripts. The specification is now implemented in all major browsers and in Node.js behind the --experimental-modules flag for \".mjs\" files. Rollup allows you to write your code using this module system, either outputting optimized ES modules for use in these native environments, or compiling it back down to existing supported formats such as CommonJS modules, AMD modules, and IIFE-style scripts. This means that you get to *write future-proof code*, and you also get the tremendous benefits of...\n\n## Tree Shaking\n\nIn addition to enabling the use of ES modules, Rollup also statically analyzes and optimizes the code you are importing, and will exclude anything that isn't actually used. This allows you to build on top of existing tools and modules without adding extra dependencies or bloating the size of your project.\n\nFor example, with CommonJS, the *entire tool or library must be imported*.\n\n```js\n// import the entire utils object with CommonJS\nvar utils = require( 'utils' );\nvar query = 'Rollup';\n// use the ajax method of the utils object\nutils.ajax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBut with ES modules, instead of importing the whole `utils` object, we can just import the one `ajax` function we need:\n\n```js\n// import the ajax function with an ES import statement\nimport { ajax } from 'utils';\nvar query = 'Rollup';\n// call the ajax function\najax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBecause Rollup includes the bare minimum, it results in lighter, faster, and less complicated libraries and applications. Since this approach is based on explicit `import` and `export` statements, it is vastly more effective than simply running an automated minifier to detect unused variables in the compiled output code.\n\n## Compatibility\n\n### Importing CommonJS\n\nRollup can import existing CommonJS modules [through a plugin](https://github.com/rollup/rollup-plugin-commonjs).\n\n### Publishing ES Modules\n\nTo make sure your ES modules are immediately usable by tools that work with CommonJS such as Node.js and webpack, you can use Rollup to compile to UMD or CommonJS format, and then point to that compiled version with the `main` property in your `package.json` file. If your `package.json` file also has a `module` field, ES-module-aware tools like Rollup and [webpack 2](https://webpack.js.org/) will [import the ES module version](https://github.com/rollup/rollup/wiki/pkg.module) directly.\n\n## Links\n\n- step-by-step [tutorial video series](https://code.lengstorf.com/learn-rollup-js/), with accompanying written walkthrough\n- miscellaneous issues in the [wiki](https://github.com/rollup/rollup/wiki)\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/rollup/rollup/graphs/contributors\"><img src=\"https://opencollective.com/rollup/contributors.svg?width=890\" /></a>\n\n\n## Backers\n\nThank you to all our backers! üôè [[Become a backer](https://opencollective.com/rollup#backer)]\n\n<a href=\"https://opencollective.com/rollup#backers\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/rollup#sponsor)]\n\n<a href=\"https://opencollective.com/rollup/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/9/avatar.svg\"></a>\n\n\n\n## License\n\n[MIT](https://github.com/rollup/rollup/blob/master/LICENSE.md)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rollup/rollup.git"
  },
  "scripts": {
    "build": "git rev-parse HEAD > .commithash && rollup -c && shx cp src/rollup/types.d.ts dist/rollup.d.ts && shx chmod a+x bin/rollup",
    "build:bootstrap": "bin/rollup -c && shx cp src/rollup/types.d.ts dist/rollup.d.ts && shx chmod a+x bin/rollup",
    "ci": "npm run test && npm run build:bootstrap && npm run test:only",
    "lint": "tslint --project . --fix && eslint --fix test/test.js test/*/index.js test/utils.js test/**/_config.js",
    "perf": "npm run build && node --expose-gc scripts/perf.js",
    "perf:debug": "node --inspect-brk scripts/perf-debug.js",
    "perf:init": "node scripts/perf-init.js",
    "postcommit": "git reset",
    "posttest-coverage": "remap-istanbul -i coverage/coverage-final.json -o coverage/coverage-remapped.json -b dist && remap-istanbul -i coverage/coverage-final.json -o coverage/coverage-remapped.lcov -t lcovonly -b dist && remap-istanbul -i coverage/coverage-final.json -o coverage/coverage-remapped -t html -b dist",
    "prebuild": "shx rm -rf dist",
    "precommit": "lint-staged",
    "prepare": "npm run build",
    "prepublishOnly": "npm run lint && npm run test",
    "pretest": "npm run build",
    "pretest-coverage": "npm run build",
    "pretest:typescript": "shx rm -rf test/typescript/dist && shx cp -r dist test/typescript/",
    "test": "npm run test:only && npm run test:typescript && npm run test:leak",
    "test-coverage": "shx rm -rf coverage/* && istanbul cover --report json node_modules/.bin/_mocha -- -u exports -R spec test/test.js",
    "test:leak": "npm i --silent --no-save weak@1 && node --expose-gc test/leak/index.js",
    "test:only": "mocha",
    "test:quick": "mocha -b",
    "test:typescript": "tsc -p test/typescript",
    "watch": "rollup -cw"
  },
  "typings": "dist/rollup.d.ts",
  "version": "0.64.1"
}
