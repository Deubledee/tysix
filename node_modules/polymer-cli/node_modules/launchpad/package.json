{
  "_args": [
    [
      "launchpad@https://registry.npmjs.org/launchpad/-/launchpad-0.7.0.tgz",
      "/home/diogo/www/node_modules/polymer-cli"
    ]
  ],
  "_from": "launchpad@https://registry.npmjs.org/launchpad/-/launchpad-0.7.0.tgz",
  "_id": "launchpad@0.7.0",
  "_inCache": true,
  "_location": "/polymer-cli/launchpad",
  "_phantomChildren": {
    "lodash": "4.17.11"
  },
  "_requested": {
    "name": "launchpad",
    "raw": "launchpad@https://registry.npmjs.org/launchpad/-/launchpad-0.7.0.tgz",
    "rawSpec": "https://registry.npmjs.org/launchpad/-/launchpad-0.7.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/launchpad/-/launchpad-0.7.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/wct-local"
  ],
  "_resolved": "https://registry.npmjs.org/launchpad/-/launchpad-0.7.0.tgz",
  "_shasum": "f427d3c0e15e869ee15513828bafefc16f9c7bc3",
  "_shrinkwrap": null,
  "_spec": "launchpad@https://registry.npmjs.org/launchpad/-/launchpad-0.7.0.tgz",
  "_where": "/home/diogo/www/node_modules/polymer-cli",
  "author": "",
  "bugs": {
    "url": "https://github.com/bitovi/launchpad/issues"
  },
  "dependencies": {
    "async": "^2.0.1",
    "browserstack": "^1.2.0",
    "debug": "^2.2.0",
    "plist": "^2.0.1",
    "q": "^1.4.1",
    "underscore": "^1.8.3"
  },
  "description": "You can launch browsers! From NodeJS! Local ones! Remote ones! Browserstack ones!",
  "devDependencies": {
    "decache": "^4.1.0",
    "electron": "^1.6.6",
    "expect.js": "^0.3.1",
    "grunt": "^1.0.1",
    "grunt-cli": "^1.2.0",
    "grunt-contrib-jshint": "^1.0.0",
    "grunt-release": "^0.14.0",
    "grunt-simple-mocha": "^0.4.0",
    "mocha": "^3.0.2",
    "phantomjs-prebuilt": "^2.1.14",
    "useragent": "^2.1.7",
    "xvfb-maybe": "~0.2.1"
  },
  "engines": {
    "node": ">= 4"
  },
  "homepage": "https://github.com/bitovi/launchpad",
  "keywords": [
    "browsers",
    "browserstack",
    "chrome",
    "firefox",
    "ie",
    "launcher",
    "opera",
    "phantomjs"
  ],
  "licenses": [
    {
      "type": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    }
  ],
  "main": "lib/index.js",
  "name": "launchpad",
  "optionalDependencies": {},
  "readme": "# Launchpad\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/bitovi/launchpad.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/bitovi/launchpad.svg)](https://travis-ci.org/bitovi/launchpad)\n\nYou can launch browsers! With NodeJS!\n\n* __Local browsers__ for MacOS, Windows and Linux (like) operating systems\n* __[BrowserStack](http://browserstack.com)__ browsers using the BrowserStack API\n\n## API\n\nThe general API for any launcher (`<type>`) looks like this:\n\n```js\nvar launch = require('launchpad');\nlaunch.<type>(configuration, function(error, launcher) {\n  launcher.browsers(function(error, browsers) {\n    // -> List of available browsers with version\n  });\n\n  launcher(url, configuration, function(error, instance) {\n    instance // -> A browser instance\n    instance.id // -> unique instance id\n    instance.stop(callback) // -> Stop the instance\n    instance.status(callback) // -> Get status information about the instance\n  });\n\n  launcher.<browsername>(url, function(error, instance) {\n    // Same as above\n  });\n});\n```\n\n## Local launchers\n\nLocal launchers look up all currently installed browsers (unless limited by LAUNCHPAD_BROWSERS - see below for details) and allow you to start new browser processes.\n\n```js\n// Launch a local browser\nlaunch.local(function(err, local) {\n  local.browsers(function(error, browsers) {\n    // -> List of all browsers found locally with version\n  });\n  \n  local.firefox('http://url', function(err, instance) {\n    // An instance is an event emitter\n    instance.on('stop', function() {\n      console.log('Terminated local firefox');\n    });\n  });\n});\n```\n\n### Environment variables impacting local browsers detection\n\nBy default Launchpad looks up all installed browsers. To speed-up this process you can define the following env variables:\n  * `LAUNCHPAD_BROWSERS` - comma delimited list of browsers you want to use, e.g. `LAUNCHPAD_BROWSERS=chrome,firefox,opera`. Other browsers will not be detected even if they are installed.\n  * `LAUNCHPAD_<browser>` - specifies where given browser is installed so that Launchpad does not need to look for it, e.g.\n    `LAUNCHPAD_CHROME=/usr/bin/chromium`\n\nThe following browser names are recognized: `chrome`, `firefox`, `safari`, `ie`, `edge`, `opera`, `canary`, `aurora`, `electron`, `phantom`, `nodeWebKit`.\nNot all platforms support all browsers - see [platform](lib/local/platform) for details.\n\n## Browserstack\n\nBrowserStack is a great cross-browser testing tool and offers API access to any account that is on a monthly plan.\nLaunchpad allows you to start BrowserStack workers through its API like this:\n\n```js\nlaunch.browserstack({\n    username : 'user',\n    password : 'password'\n  },\n  function(err, browserstack) {\n    browserstack.browsers(function(error, browsers) {\n      // -> List of all Browserstack browsers\n    });\n    \n    browserstack.ie('http://url', function(err, instance) {\n      // Shut the instance down after 5 seconds\n      setTimeout(function() {\n        instance.stop(function (err) {\n          if(err) {\n            console.log(err);\n          }\n          console.log('Browser instance has stopped');\n        });\n      }, 5000);\n  });\n});\n```\n\nBehind the scenes we have the [node-browserstack](https://github.com/scottgonzalez/node-browserstack)\nmodule do all the work (API calls) for us.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/bitovi/launchpad.git"
  },
  "scripts": {
    "publish": "git push origin && git push origin --tags",
    "release:major": "npm version major && npm publish",
    "release:minor": "npm version minor && npm publish",
    "release:patch": "npm version patch && npm publish",
    "release:pre": "npm version prerelease && npm publish",
    "test": "xvfb-maybe grunt test --stack"
  },
  "version": "0.7.0"
}
