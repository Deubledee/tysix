{
  "_args": [
    [
      "es6-promisify@https://registry.npmjs.org/es6-promisify/-/es6-promisify-6.0.1.tgz",
      "/home/diogo/www/node_modules/polymer-cli"
    ]
  ],
  "_from": "es6-promisify@https://registry.npmjs.org/es6-promisify/-/es6-promisify-6.0.1.tgz",
  "_id": "es6-promisify@6.0.1",
  "_inCache": true,
  "_location": "/polymer-cli/es6-promisify",
  "_phantomChildren": {},
  "_requested": {
    "name": "es6-promisify",
    "raw": "es6-promisify@https://registry.npmjs.org/es6-promisify/-/es6-promisify-6.0.1.tgz",
    "rawSpec": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-6.0.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-6.0.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/pem"
  ],
  "_resolved": "https://registry.npmjs.org/es6-promisify/-/es6-promisify-6.0.1.tgz",
  "_shasum": "6edaa45f3bd570ffe08febce66f7116be4b1cdb6",
  "_shrinkwrap": null,
  "_spec": "es6-promisify@https://registry.npmjs.org/es6-promisify/-/es6-promisify-6.0.1.tgz",
  "_where": "/home/diogo/www/node_modules/polymer-cli",
  "author": {
    "email": "mikehall314@gmail.com",
    "name": "Mike Hall"
  },
  "bugs": {
    "url": "http://github.com/digitaldesignlabs/es6-promisify/issues"
  },
  "dependencies": {},
  "description": "Converts callback-based functions to ES6 Promises",
  "devDependencies": {
    "babel-cli": "^6.26.0",
    "babel-preset-es2015": "^6.24.1",
    "es6-promise": "^4.2.5",
    "eslint": "^5.7.0",
    "istanbul": "^0.4.5",
    "sinon": "^7.0.0",
    "tape": "^4.9.1"
  },
  "files": [
    "dist/promisify.js"
  ],
  "greenkeeper": {
    "ignore": [
      "eslint"
    ]
  },
  "homepage": "https://github.com/digitaldesignlabs/es6-promisify#readme",
  "keywords": [
    "es6",
    "promises",
    "promisify"
  ],
  "license": "MIT",
  "main": "dist/promisify.js",
  "name": "es6-promisify",
  "optionalDependencies": {},
  "readme": "[![Travis CI](https://travis-ci.org/digitaldesignlabs/es6-promisify.svg)](https://travis-ci.org/digitaldesignlabs/es6-promisify)\n\n# es6-promisify\nConverts callback-based functions to ES6/ES2015 Promises, using a boilerplate callback function.\n\nNOTE: All-new API for Version 6.0.0; please read carefully!\n===========================================================\n\n## Install\nInstall with [npm](https://npmjs.org/package/es6-promisify)\n\n```bash\nnpm install es6-promisify\n```\n\n## Example\n```js\nconst {promisify} = require(\"es6-promisify\");\n\n// Convert the stat function\nconst fs = require(\"fs\");\nconst stat = promisify(fs.stat);\n\n// Now usable as a promise!\nstat(\"example.txt\").then(function (stats) {\n    console.log(\"Got stats\", stats);\n}).catch(function (err) {\n    console.error(\"Yikes!\", err);\n});\n```\n\n## Promisify methods\n```js\nconst {promisify} = require(\"es6-promisify\");\n\n// Create a promise-based version of send_command\nconst redis = require(\"redis\").createClient(6379, \"localhost\");\nconst client = promisify(redis.send_command.bind(redis));\n\n// Send commands to redis and get a promise back\nclient(\"ping\").then(function (pong) {\n    console.log(\"Got\", pong);\n}).catch(function (err) {\n    console.error(\"Unexpected error\", err);\n}).then(function () {\n    redis.quit();\n});\n```\n\n## Handle multiple callback arguments, with named parameters\n```js\nconst {promisify} = require(\"es6-promisify\");\n\nfunction test(cb) {\n    return cb(undefined, 1, 2, 3);\n}\n\n// Create promise-based version of test\ntest[promisify.argumentNames] = [\"one\", \"two\", \"three\"];\nconst multi = promisify(test);\n\n// Returns named arguments\nmulti().then(result => {\n    console.log(result); // {one: 1, two: 2, three: 3}\n});\n```\n\n## Provide your own Promise implementation\n```js\nconst {promisify} = require(\"es6-promisify\");\n\n// Now uses Bluebird\npromisify.Promise = require(\"bluebird\");\n\nconst test = promisify(cb => cb(undefined, \"test\"));\ntest().then(result => {\n    console.log(result); // \"test\", resolved using Bluebird\n});\n```\n\n### Tests\nTest with tape\n```bash\n$ npm test\n```\n\n### Changes from v5.0.0\n- Allow developer to specify a different implementations of `Promise`\n- No longer ships with a polyfill for `Promise`. If your environment has no native `Promise` you must polyfill yourself, or set `promisify.Promise` to an A+ compatible `Promise` implementation.\n- Removed support for `settings.thisArg`: use `.bind()` instead.\n- Removed support for `settings.multiArgs`: use named arguments instead.\n\nPublished under the [MIT License](http://opensource.org/licenses/MIT).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/digitaldesignlabs/es6-promisify.git"
  },
  "scripts": {
    "build": "babel lib -d dist",
    "pretest": "eslint lib/*.js test/*.js",
    "test": "npm run build && ./node_modules/.bin/tape test",
    "test:cover": "npm run build && ./node_modules/.bin/istanbul cover test"
  },
  "version": "6.0.1"
}
