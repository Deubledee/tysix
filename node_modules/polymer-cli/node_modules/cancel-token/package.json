{
  "_args": [
    [
      "cancel-token@http://registry.npmjs.org/cancel-token/-/cancel-token-0.1.1.tgz",
      "/home/diogo/www/node_modules/polymer-cli"
    ]
  ],
  "_from": "cancel-token@http://registry.npmjs.org/cancel-token/-/cancel-token-0.1.1.tgz",
  "_id": "cancel-token@0.1.1",
  "_inCache": true,
  "_location": "/polymer-cli/cancel-token",
  "_phantomChildren": {},
  "_requested": {
    "name": "cancel-token",
    "raw": "cancel-token@http://registry.npmjs.org/cancel-token/-/cancel-token-0.1.1.tgz",
    "rawSpec": "http://registry.npmjs.org/cancel-token/-/cancel-token-0.1.1.tgz",
    "scope": null,
    "spec": "http://registry.npmjs.org/cancel-token/-/cancel-token-0.1.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/polymer-analyzer",
    "/polymer-cli/polymer-linter"
  ],
  "_resolved": "http://registry.npmjs.org/cancel-token/-/cancel-token-0.1.1.tgz",
  "_shasum": "c18197674bb1c84c1d6933ebf15d8d5a5ce79b4f",
  "_shrinkwrap": null,
  "_spec": "cancel-token@http://registry.npmjs.org/cancel-token/-/cancel-token-0.1.1.tgz",
  "_where": "/home/diogo/www/node_modules/polymer-cli",
  "author": {
    "email": "rictic@google.com",
    "name": "Peter Burns"
  },
  "bugs": {
    "url": "https://github.com/rictic/cancel-token/issues"
  },
  "dependencies": {
    "@types/node": "^4.0.30"
  },
  "description": "Implementation of https://github.com/littledan/proposal-cancelable-promises",
  "devDependencies": {
    "@types/chai": "^3.4.34",
    "@types/mocha": "^2.2.33",
    "chai": "^3.5.0",
    "mocha": "^3.2.0",
    "tslint": "^4.1.0",
    "typescript": "^2.1.4",
    "watchy": "^0.6.6"
  },
  "homepage": "https://github.com/rictic/cancel-token#readme",
  "keywords": [
    "cancel-token",
    "cancelation",
    "cancellation"
  ],
  "license": "BSD-3-Clause",
  "main": "lib/cancel-token.js",
  "name": "cancel-token",
  "optionalDependencies": {},
  "readme": "## CancelToken and Cancel Polyfill\n\nThis a polyfill of the polyfillable parts of the proposed cancellable promises spec.\n\nSee https://github.com/littledan/proposal-cancelable-promises for more details.\n\n\n### Use\n\n```javascript\nimport {CancelToken} from 'cancel-token';\n\nconst source = CancelToken.source();\n\nconst result = someCancellableApi(source.token);\n\neventSource.on('dont-care-about-result-anymore', () {\n  source.cancel();\n});\n\n// This may throw a Cancel if we called source.cancel().\nconst value = await result;\n\n\n// Elsewhere, maybe in another library\nasync function someCancellableApi(cancelToken) {\n  await doSomeWork(cancelToken);\n\n  // I'm outside of a critical section here, so it's ok if I were to throw.\n  cancelToken.throwIfRequested();\n\n  return doSomeMoreWork(cancelToken);\n}\n```\n\n### Developing\n\nTo test:\n\n    npm test\n\nTo watch source files and rerun tests when they change:\n\n    npm test:watch\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/rictic/cancel-token.git"
  },
  "scripts": {
    "build": "tsc",
    "prepublish": "npm test",
    "test": "npm run build && mocha lib/test",
    "test:watch": "watchy -w src/ -- npm test --loglevel=silent"
  },
  "typings": "lib/cancel-token.d.ts",
  "version": "0.1.1"
}
