{
  "_args": [
    [
      "argv-tools@https://registry.npmjs.org/argv-tools/-/argv-tools-0.1.1.tgz",
      "/home/diogo/www/node_modules/polymer-cli"
    ]
  ],
  "_from": "argv-tools@https://registry.npmjs.org/argv-tools/-/argv-tools-0.1.1.tgz",
  "_id": "argv-tools@0.1.1",
  "_inCache": true,
  "_location": "/polymer-cli/argv-tools",
  "_phantomChildren": {},
  "_requested": {
    "name": "argv-tools",
    "raw": "argv-tools@https://registry.npmjs.org/argv-tools/-/argv-tools-0.1.1.tgz",
    "rawSpec": "https://registry.npmjs.org/argv-tools/-/argv-tools-0.1.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/argv-tools/-/argv-tools-0.1.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/command-line-args"
  ],
  "_resolved": "https://registry.npmjs.org/argv-tools/-/argv-tools-0.1.1.tgz",
  "_shasum": "588283f3393ada47141440b12981cd41bf6b7032",
  "_shrinkwrap": null,
  "_spec": "argv-tools@https://registry.npmjs.org/argv-tools/-/argv-tools-0.1.1.tgz",
  "_where": "/home/diogo/www/node_modules/polymer-cli",
  "author": {
    "email": "75pound@gmail.com",
    "name": "Lloyd Brookes"
  },
  "bugs": {
    "url": "https://github.com/75lb/argv-tools/issues"
  },
  "dependencies": {
    "array-back": "^2.0.0",
    "find-replace": "^2.0.1"
  },
  "description": "[![view on npm](https://img.shields.io/npm/v/argv-tools.svg)](https://www.npmjs.org/package/argv-tools) [![npm module downloads](https://img.shields.io/npm/dt/argv-tools.svg)](https://www.npmjs.org/package/argv-tools) [![Build Status](https://travis-ci.org/75lb/argv-tools.svg?branch=master)](https://travis-ci.org/75lb/argv-tools) [![Dependency Status](https://david-dm.org/75lb/argv-tools.svg)](https://david-dm.org/75lb/argv-tools) [![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)",
  "devDependencies": {
    "jsdoc-to-markdown": "^3.0.3",
    "test-runner": "^0.5.0-1"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "homepage": "https://github.com/75lb/argv-tools#readme",
  "keywords": [
    "args",
    "argument",
    "argv",
    "cli",
    "command",
    "line",
    "option",
    "options",
    "parse",
    "parser",
    "parsing"
  ],
  "license": "MIT",
  "name": "argv-tools",
  "optionalDependencies": {},
  "readme": "[![view on npm](https://img.shields.io/npm/v/argv-tools.svg)](https://www.npmjs.org/package/argv-tools)\n[![npm module downloads](https://img.shields.io/npm/dt/argv-tools.svg)](https://www.npmjs.org/package/argv-tools)\n[![Build Status](https://travis-ci.org/75lb/argv-tools.svg?branch=master)](https://travis-ci.org/75lb/argv-tools)\n[![Dependency Status](https://david-dm.org/75lb/argv-tools.svg)](https://david-dm.org/75lb/argv-tools)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](https://github.com/feross/standard)\n\n<a name=\"module_argv-tools\"></a>\n\n## argv-tools\nSome useful tools for working with `process.argv`.\n\n**Example**  \n```js\nconst argvTools = require('argv-tools')\n```\n\n* [argv-tools](#module_argv-tools)\n    * [.ArgvArray](#module_argv-tools.ArgvArray)\n        * [.load(argv)](#module_argv-tools.ArgvArray+load)\n        * [.clear()](#module_argv-tools.ArgvArray+clear)\n        * [.expandOptionEqualsNotation()](#module_argv-tools.ArgvArray+expandOptionEqualsNotation)\n        * [.expandGetoptNotation()](#module_argv-tools.ArgvArray+expandGetoptNotation)\n        * [.hasCombinedShortOptions()](#module_argv-tools.ArgvArray+hasCombinedShortOptions) ⇒ <code>boolean</code>\n    * [.re](#module_argv-tools.re)\n    * [.expandCombinedShortArg(arg)](#module_argv-tools.expandCombinedShortArg) ⇒ <code>Array.&lt;string&gt;</code>\n    * [.isOptionEqualsNotation(arg)](#module_argv-tools.isOptionEqualsNotation) ⇒ <code>boolean</code>\n    * [.isOption(arg)](#module_argv-tools.isOption) ⇒ <code>boolean</code>\n    * [.isLongOption(arg)](#module_argv-tools.isLongOption) ⇒ <code>boolean</code>\n    * [.getOptionName(arg)](#module_argv-tools.getOptionName) ⇒ <code>string</code>\n\n<a name=\"module_argv-tools.ArgvArray\"></a>\n\n### argvTools.ArgvArray\nArray subclass encapsulating common operations on `process.argv`.\n\n**Kind**: static class of [<code>argv-tools</code>](#module_argv-tools)  \n\n* [.ArgvArray](#module_argv-tools.ArgvArray)\n    * [.load(argv)](#module_argv-tools.ArgvArray+load)\n    * [.clear()](#module_argv-tools.ArgvArray+clear)\n    * [.expandOptionEqualsNotation()](#module_argv-tools.ArgvArray+expandOptionEqualsNotation)\n    * [.expandGetoptNotation()](#module_argv-tools.ArgvArray+expandGetoptNotation)\n    * [.hasCombinedShortOptions()](#module_argv-tools.ArgvArray+hasCombinedShortOptions) ⇒ <code>boolean</code>\n\n<a name=\"module_argv-tools.ArgvArray+load\"></a>\n\n#### argvArray.load(argv)\nClears the array has loads the supplied input.\n\n**Kind**: instance method of [<code>ArgvArray</code>](#module_argv-tools.ArgvArray)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| argv | <code>Array.&lt;string&gt;</code> | The argv list to load. Defaults to `process.argv`. |\n\n<a name=\"module_argv-tools.ArgvArray+clear\"></a>\n\n#### argvArray.clear()\nClear the array.\n\n**Kind**: instance method of [<code>ArgvArray</code>](#module_argv-tools.ArgvArray)  \n<a name=\"module_argv-tools.ArgvArray+expandOptionEqualsNotation\"></a>\n\n#### argvArray.expandOptionEqualsNotation()\nexpand ``--option=value` style args.\n\n**Kind**: instance method of [<code>ArgvArray</code>](#module_argv-tools.ArgvArray)  \n<a name=\"module_argv-tools.ArgvArray+expandGetoptNotation\"></a>\n\n#### argvArray.expandGetoptNotation()\nexpand getopt-style combinedShort options.\n\n**Kind**: instance method of [<code>ArgvArray</code>](#module_argv-tools.ArgvArray)  \n<a name=\"module_argv-tools.ArgvArray+hasCombinedShortOptions\"></a>\n\n#### argvArray.hasCombinedShortOptions() ⇒ <code>boolean</code>\nReturns true if the array contains combined short options (e.g. `-ab`).\n\n**Kind**: instance method of [<code>ArgvArray</code>](#module_argv-tools.ArgvArray)  \n<a name=\"module_argv-tools.re\"></a>\n\n### argvTools.re\nRegular expressions for matching option formats.\n\n**Kind**: static constant of [<code>argv-tools</code>](#module_argv-tools)  \n<a name=\"module_argv-tools.expandCombinedShortArg\"></a>\n\n### argvTools.expandCombinedShortArg(arg) ⇒ <code>Array.&lt;string&gt;</code>\nExpand a combined short option.\n\n**Kind**: static method of [<code>argv-tools</code>](#module_argv-tools)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| arg | <code>string</code> | the string to expand, e.g. `-ab` |\n\n<a name=\"module_argv-tools.isOptionEqualsNotation\"></a>\n\n### argvTools.isOptionEqualsNotation(arg) ⇒ <code>boolean</code>\nReturns true if the supplied arg matches `--option=value` notation.\n\n**Kind**: static method of [<code>argv-tools</code>](#module_argv-tools)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| arg | <code>string</code> | the arg to test, e.g. `--one=something` |\n\n<a name=\"module_argv-tools.isOption\"></a>\n\n### argvTools.isOption(arg) ⇒ <code>boolean</code>\nReturns true if the supplied arg is in either long (`--one`) or short (`-o`) format.\n\n**Kind**: static method of [<code>argv-tools</code>](#module_argv-tools)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| arg | <code>string</code> | the arg to test, e.g. `--one` |\n\n<a name=\"module_argv-tools.isLongOption\"></a>\n\n### argvTools.isLongOption(arg) ⇒ <code>boolean</code>\nReturns true if the supplied arg is in long (`--one`) format.\n\n**Kind**: static method of [<code>argv-tools</code>](#module_argv-tools)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| arg | <code>string</code> | the arg to test, e.g. `--one` |\n\n<a name=\"module_argv-tools.getOptionName\"></a>\n\n### argvTools.getOptionName(arg) ⇒ <code>string</code>\nReturns the name from a long, short or `--options=value` arg.\n\n**Kind**: static method of [<code>argv-tools</code>](#module_argv-tools)  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| arg | <code>string</code> | the arg to inspect, e.g. `--one` |\n\n\n* * *\n\n&copy; 2018 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/75lb/argv-tools.git"
  },
  "scripts": {
    "docs": "jsdoc2md --template README.hbs index.js > README.md",
    "test": "test-runner test.js"
  },
  "version": "0.1.1"
}
