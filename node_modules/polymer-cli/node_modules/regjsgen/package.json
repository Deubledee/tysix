{
  "_args": [
    [
      "regjsgen@https://registry.npmjs.org/regjsgen/-/regjsgen-0.4.0.tgz",
      "/home/diogo/www/node_modules/polymer-cli"
    ]
  ],
  "_from": "regjsgen@https://registry.npmjs.org/regjsgen/-/regjsgen-0.4.0.tgz",
  "_id": "regjsgen@0.4.0",
  "_inCache": true,
  "_location": "/polymer-cli/regjsgen",
  "_phantomChildren": {},
  "_requested": {
    "name": "regjsgen",
    "raw": "regjsgen@https://registry.npmjs.org/regjsgen/-/regjsgen-0.4.0.tgz",
    "rawSpec": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.4.0.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.4.0.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/regexpu-core"
  ],
  "_resolved": "https://registry.npmjs.org/regjsgen/-/regjsgen-0.4.0.tgz",
  "_shasum": "c1eb4c89a209263f8717c782591523913ede2561",
  "_shrinkwrap": null,
  "_spec": "regjsgen@https://registry.npmjs.org/regjsgen/-/regjsgen-0.4.0.tgz",
  "_where": "/home/diogo/www/node_modules/polymer-cli",
  "author": {
    "name": "Benjamin Tan",
    "url": "https://bnjmnt4n.now.sh/"
  },
  "bugs": {
    "url": "https://github.com/bnjmnt4n/regjsgen/issues"
  },
  "dependencies": {},
  "description": "Generate regular expressions from regjsparser’s AST.",
  "devDependencies": {
    "codecov": "^3.0.0",
    "istanbul": "~0.4.5",
    "regjsparser": "~0.3.0",
    "request": "^2.83.0"
  },
  "files": [
    "LICENSE",
    "regjsgen.js"
  ],
  "homepage": "https://github.com/bnjmnt4n/regjsgen",
  "keywords": [
    "ast",
    "generate",
    "regex",
    "regexp",
    "regular expressions"
  ],
  "license": "MIT",
  "main": "regjsgen.js",
  "name": "regjsgen",
  "optionalDependencies": {},
  "readme": "# regjsgen [![Build status](https://travis-ci.org/bnjmnt4n/regjsgen.svg?branch=master)](https://travis-ci.org/bnjmnt4n/regjsgen) [![Code coverage status](https://codecov.io/gh/bnjmnt4n/regjsgen/branch/master/graph/badge.svg)](https://codecov.io/gh/bnjmnt4n/regjsgen)\n\nGenerate regular expressions from [regjsparser](https://github.com/jviereck/regjsparser)’s AST.\n\n## Installation\n\n```bash\nnpm install --save regjsgen\n```\n\n## API\n\n### `regjsgen.generate(ast)`\n\nThis function accepts an abstract syntax tree representing a regular expression, and returns the generated regular expression string.\n\n```js\nvar regjsparser = require('regjsparser');\nvar regjsgen = require('regjsgen');\n\n// Generate an AST with `regjsparser`.\nvar ast = regjsparser.parse(regex);\n\n// Modify AST\n// …\n\n// Generate `RegExp` string with `regjsgen`.\nregex = regjsgen.generate(ast);\n```\n\n## Support\n\nTested in Node.js 0.10, 0.12, 4, 6 and 8.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/bnjmnt4n/regjsgen.git"
  },
  "scripts": {
    "coverage": "istanbul cover --report html tests/tests.js",
    "test": "node tests/tests.js",
    "update-fixtures": "node tests/update-fixtures.js"
  },
  "version": "0.4.0"
}
