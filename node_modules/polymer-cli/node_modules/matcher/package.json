{
  "_args": [
    [
      "matcher@https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
      "/home/diogo/www/node_modules/polymer-cli"
    ]
  ],
  "_from": "matcher@https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
  "_id": "matcher@1.1.1",
  "_inCache": true,
  "_location": "/polymer-cli/matcher",
  "_phantomChildren": {},
  "_requested": {
    "name": "matcher",
    "raw": "matcher@https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
    "rawSpec": "https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/polymer-cli/polymer-build"
  ],
  "_resolved": "https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
  "_shasum": "51d8301e138f840982b338b116bb0c09af62c1c2",
  "_shrinkwrap": null,
  "_spec": "matcher@https://registry.npmjs.org/matcher/-/matcher-1.1.1.tgz",
  "_where": "/home/diogo/www/node_modules/polymer-cli",
  "author": {
    "email": "sindresorhus@gmail.com",
    "name": "Sindre Sorhus",
    "url": "sindresorhus.com"
  },
  "bugs": {
    "url": "https://github.com/sindresorhus/matcher/issues"
  },
  "dependencies": {
    "escape-string-regexp": "^1.0.4"
  },
  "description": "Simple wildcard matching",
  "devDependencies": {
    "ava": "*",
    "matcha": "^0.7.0",
    "xo": "*"
  },
  "engines": {
    "node": ">=4"
  },
  "files": [
    "index.js"
  ],
  "homepage": "https://github.com/sindresorhus/matcher#readme",
  "keywords": [
    "expression",
    "filter",
    "glob",
    "globber",
    "globbing",
    "match",
    "matcher",
    "matching",
    "minimatch",
    "pattern",
    "regex",
    "regexp",
    "regular",
    "string",
    "wildcard"
  ],
  "license": "MIT",
  "name": "matcher",
  "optionalDependencies": {},
  "readme": "# matcher [![Build Status](https://travis-ci.org/sindresorhus/matcher.svg?branch=master)](https://travis-ci.org/sindresorhus/matcher)\n\n> Simple [wildcard](https://en.wikipedia.org/wiki/Wildcard_character) matching\n\nUseful when you want to accept loose string input and regexes/globs are too convoluted.\n\n\n## Install\n\n```\n$ npm install matcher\n```\n\n\n## Usage\n\n```js\nconst matcher = require('matcher');\n\nmatcher(['foo', 'bar', 'moo'], ['*oo', '!foo']);\n//=> ['moo']\n\nmatcher(['foo', 'bar', 'moo'], ['!*oo']);\n//=> ['bar']\n\nmatcher.isMatch('unicorn', 'uni*');\n//=> true\n\nmatcher.isMatch('unicorn', '*corn');\n//=> true\n\nmatcher.isMatch('unicorn', 'un*rn');\n//=> true\n\nmatcher.isMatch('rainbow', '!unicorn');\n//=> true\n\nmatcher.isMatch('foo bar baz', 'foo b* b*');\n//=> true\n\nmatcher.isMatch('unicorn', 'uni\\\\*');\n//=> false\n\nmatcher.isMatch('UNICORN', 'UNI*', {caseSensitive: true});\n//=> true\n\nmatcher.isMatch('UNICORN', 'unicorn', {caseSensitive: true});\n//=> false\n```\n\n\n## API\n\n### matcher(inputs, patterns, [options])\n\nAccepts an array of `input`'s and `pattern`'s.\n\nReturns an array of `inputs` filtered based on the `patterns`.\n\n### matcher.isMatch(input, pattern, [options])\n\nReturns a boolean of whether the `input` matches the `pattern`.\n\n#### input\n\nType: `string`\n\nString to match.\n\n#### options\n\nType: `Object`\n\n##### caseSensitive\n\nType: `boolean`<br>\nDefault: `false`\n\nTreat uppercase and lowercase characters as being the same.\n\nEnsure you use this correctly. For example, files and directories should be matched case-insensitively, while most often, object keys should be matched case-sensitively.\n\n#### pattern\n\nType: `string`\n\nUse `*` to match zero or more characters. A pattern starting with `!` will be negated.\n\n\n## Benchmark\n\n```\n$ npm run bench\n```\n\n\n## Related\n\n- [multimatch](https://github.com/sindresorhus/multimatch) - Extends `minimatch.match()` with support for multiple patterns\n\n\n## License\n\nMIT Â© [Sindre Sorhus](https://sindresorhus.com)\n",
  "readmeFilename": "readme.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/sindresorhus/matcher.git"
  },
  "scripts": {
    "bench": "matcha bench.js",
    "test": "xo && ava"
  },
  "version": "1.1.1"
}
